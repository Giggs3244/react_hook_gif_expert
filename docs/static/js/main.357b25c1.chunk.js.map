{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","currentCategories","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","setData","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMA8BeA,EA3BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAgBzC,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAwBP,GAAxB,mBAAuCO,OACrDN,EAAc,OAMd,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAfhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,YCIZG,EATK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC5B,OACE,yBAAKC,UAAU,0CACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,0FAC0EO,UAC7FF,GAFmB,qBAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXjB,kBAedY,GAfc,4CAAH,sDCsBLM,EAlBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EAChBpB,mBAAS,CAC/B0B,KAAM,GACNQ,SAAS,IAH6B,mBACjCR,EADiC,KAC3BS,EAD2B,KAexC,OATAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACC,GAAD,OACrBH,EAAQ,CACNT,KAAMY,EACNJ,SAAS,SAGZ,CAACd,IAEGM,EDb2Ba,CAAanB,GAAjCW,EADkB,EACxBL,KAAcQ,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIlB,UAAU,qCAAqCI,GAElDc,GAAW,uBAAGlB,UAAU,oCAAb,eAEZ,yBAAKA,UAAU,aACZe,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaW,IAAKX,EAAIC,IAAQD,UEQzBY,EAnBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,OAAQ,WAD7B,mBAClB0C,EADkB,KACN3C,EADM,KAGzB,OACE,oCACE,4CACA,6BAEA,kBAAC,EAAD,CAAaA,cAAeA,IAE5B,4BACG2C,EAAWd,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASoB,IAAKpB,EAAUA,SAAUA,UCX5CuB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.357b25c1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((currentCategories) => [inputValue, ...currentCategories]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=OTj9HHnlc2IdWFSwAWx04TQCcekXdLgw&q=${encodeURI(\r\n    category\r\n  )}&limit=5`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n      {loading && <p className=\"animate__animated animate__flash\">Cargando...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [data, setData] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setData({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return data;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Goku\", \"Naruto\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport GifExpertApp from \"./components/GifExpertApp\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}